//buildscript {
//    dependencies {
//        classpath 'com.h2database:h2:1.4.191'
//    }
//}

plugins {
    id 'nu.studer.jooq' version '2.0.2'
    id 'org.flywaydb.flyway' version '4.0.3'
}

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mwypych' at '18.12.16 17:06' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'distribution'
apply plugin: 'groovy'
apply plugin: 'jacoco'

mainClassName = 'dropboks.App'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

jooq {
  version = '3.8.6' // the default (can be omitted)
  edition = 'OSS'   // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL
  
  sample(sourceSets.main) {
       jdbc {
           driver = 'org.sqlite.JDBC'//'org.postgresql.Driver'
           url = 'jdbc:sqlite:test.db'
       }
       generator {
           name = 'org.jooq.util.DefaultGenerator'
           strategy {
               name = 'org.jooq.util.DefaultGeneratorStrategy'
               // ...
           }
           database {
               name = 'org.jooq.util.sqlite.SQLiteDatabase'
           }
           generate {
               relations = true
               deprecated = false
               records = true
               pojos = true
               immutablePojos = false
               fluentSetters = true
           }
           target {
               packageName = 'pl.edu.agh.kis.florist.db'
           }
       }
   }
}

flyway {
    url = 'jdbc:sqlite:test.db'
}


// In this section you declare the dependencies for your production and test code
dependencies {

    jooqRuntime group: 'org.xerial', name: 'sqlite-jdbc', version: '3.14.2.1'//'postgresql:postgresql:9.1-901.jdbc4'
    
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.14.2.1'
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.jooq:jooq'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile 'com.sparkjava:spark-core:2.5.4'
    compile 'de.svenkubiak:jBCrypt:0.4.1'
    compile 'com.sparkjava:spark-template-mustache:2.3'



    // Use the awesome Spock testing and specification framework even with Java
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.1'

}

tasks.findAll { task -> task.name.startsWith('generate') } 
		.each { 
			it.dependsOn flywayMigrate
			it.inputs.file( "test.db")
                  }

task generateAllJooqSchemaSource << {}

generateAllJooqSchemaSource.dependsOn {
    tasks.findAll { task -> task.name.matches('generate\\w+JooqSchemaSource') && task.name != 'generateAllJooqSchemaSource' }
}


eclipseClasspath.dependsOn generateAllJooqSchemaSource
ideaModule.dependsOn generateAllJooqSchemaSource
compileJava.dependsOn generateAllJooqSchemaSource

clean.dependsOn flywayClean


